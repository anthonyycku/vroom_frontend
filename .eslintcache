[{"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js":"1","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js":"2","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js":"3","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCompany.js":"4","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js":"5","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js":"6","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js":"7","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/index.js":"8","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCar.js":"9"},{"size":1573,"mtime":1612137057244,"results":"10","hashOfConfig":"11"},{"size":5141,"mtime":1612121536147,"results":"12","hashOfConfig":"11"},{"size":1364,"mtime":1612065253777,"results":"13","hashOfConfig":"11"},{"size":5120,"mtime":1612107883041,"results":"14","hashOfConfig":"11"},{"size":6210,"mtime":1612137054009,"results":"15","hashOfConfig":"11"},{"size":4559,"mtime":1612069460644,"results":"16","hashOfConfig":"11"},{"size":2727,"mtime":1612137050220,"results":"17","hashOfConfig":"11"},{"size":272,"mtime":1611976727766,"results":"18","hashOfConfig":"11"},{"size":5637,"mtime":1612132453940,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xikucl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js",["42"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js",[],["43","44"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js",["45","46","47","48"],"import React from 'react';\nimport './styles/styles.css'\n\nclass Nav extends React.Component {\n    render() {\n        const { gotoPage } = this.props;\n        return (\n            <div className=\"navigation\">\n                <nav class=\"navbar navbar-expand-lg fixed-top\">\n                    <div class=\"container-fluid\">\n                        <a href=\"#\" onClick={() => gotoPage(\"main\")} className=\"navbar-brand\">VROOM</a>\n                        <ul class=\"navbar-nav\">\n                            <li class=\"nav-item dropdown\">\n                                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    Create\n                                 </a>\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                    <li><a class=\"dropdown-item\" href=\"#\" onClick={() => gotoPage(\"createCompany\")}>Create Company</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"#\" onClick={() => gotoPage(\"createCar\")}>Create Car</a></li>\n                                </ul>\n                            </li>\n                        </ul>\n\n                    </div>\n                </nav>\n            </div>\n\n        )\n    }\n}\n\nexport default Nav;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCompany.js",["49"],"import React from 'react';\nimport axios from 'axios';\n\nclass EditCompany extends React.Component {\n\n  state = {\n    name: \"\",\n    description: \"\",\n    country: \"\",\n    image: \"\",\n    parent_id: 0,\n    showParent: \"\"\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.getCompany();\n    }, 250)\n    setTimeout(() => {\n      this.getParent();\n    }, 400)\n  }\n  //GET SPECIFIC COMPANY\n  getCompany = () => {\n    axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.props.companyID).then(response => {\n      let data = response.data;\n      this.setState({\n        name: data.name,\n        description: data.description,\n        country: data.country,\n        image: data.image,\n        parent_id: data.parent_id\n      })\n    })\n  }\n  getParent = () => {\n    axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.state.parent_id).then(response => {\n      this.setState({\n        showParent: response.data.name\n      })\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showParent\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showParent.toLowerCase()) {\n            this.setState({\n              parent_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showParent.toLowerCase())) {\n          this.setState({\n            parent_id: 0\n          })\n        }\n      })\n    }\n\n  }\n\n  updateCompany = (event) => {\n    event.preventDefault()\n    axios.put('https://vroomies.herokuapp.com/companies/' + this.props.companyID, this.state).then((response) => {\n    })\n    this.props.gotoPage(\"company\", this.props.companyID);\n  }\n\n\n\n\n  render() {\n    const { name, description, country, image, parent_id, showParent } = this.state\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"company\", this.props.companyID)}>Back</button>\n        <h3>Edit this company</h3>\n        <form id=\"createForm\" onSubmit={this.updateCompany}>\n          {/* Name */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label htmlFor=\"name\" className=\"form-label\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                autoComplete=\"off\"\n                className=\"form-control\"\n                onChange={this.handleChange}\n                defaultValue={name}\n              />\n            </div>\n          </div>\n          <br />\n          {/* Description */}\n          <div className=\"row\">\n            <div className=\"col-sm-10\">\n              <label className=\"form-label\" htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"description\"\n                onChange={this.handleChange}\n                defaultValue={description}>\n              </textarea>\n            </div>\n          </div>\n          <br />\n          {/* Image */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                defaultValue={image} />\n            </div>\n          </div>\n          <br />\n          {/* Country */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"country\">Original country</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"country\"\n                onChange={this.handleChange}\n                defaultValue={country} />\n            </div>\n          </div>\n          <br />\n          {/* Parent_ID */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showParent\">Parent Company</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"showParent\"\n                onKeyUp={this.handleChange}\n                defaultValue={showParent} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.parent_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showParent}'s ID is: {this.state.parent_id}</p>\n              :\n              <p style={{ color: \"limegreen\" }}>Leave empty if no parent company</p>\n            }\n          </div>\n          <br />\n          <input type=\"submit\" value=\"Edit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n\n    )\n  }\n}\nexport default EditCompany;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js",["50","51","52","53","54"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js",["55"],"import React from 'react';\nimport axios from 'axios';\nimport Main from './Main'\n\nclass CreateCompany extends React.Component {\n\n  state = {\n    name: '',\n    description: \"\",\n    country: '',\n    image: \"\",\n    parent_id: 0,\n    showParent: \"\"\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showParent\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showParent.toLowerCase()) {\n            this.setState({\n              parent_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showParent.toLowerCase())) {\n          this.setState({\n            parent_id: 0\n          })\n        }\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let tempState = { ...this.state };\n    delete tempState.showParent;\n    axios.post(\"https://vroomies.herokuapp.com/companies\", tempState).then(response => {\n      this.setState({\n        name: \"\",\n        description: \"\",\n        image: \"\",\n        country: \"\",\n        parent_id: 0,\n        showParent: \"\"\n      })\n    })\n    this.props.gotoPage(\"main\");\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"main\")}>Back</button>\n        <h3>Create a Company</h3>\n\n        <form onSubmit={this.handleSubmit}>\n          {/* NAME  */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"name\">Company Name</label>\n              <input\n                required\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name} />\n            </div>\n          </div>\n          <br />\n          {/* DESCRIPTION */}\n          <div className=\"row\">\n            <div className=\"col-sm-10\">\n              <label className=\"form-label\" htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"description\"\n                onChange={this.handleChange}\n                value={this.state.description}>\n              </textarea>\n            </div>\n          </div>\n          <br />\n          {/* IMAGE */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                value={this.state.image} />\n            </div>\n          </div>\n          <br />\n          {/* COUNTRY */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"country\">Original country</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"country\"\n                onChange={this.handleChange}\n                value={this.state.country} />\n            </div>\n          </div>\n          <br />\n          {/* PARENT_ID */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showParent\">Parent Company</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"showParent\"\n                onChange={this.handleChange}\n                value={this.state.showParent} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.parent_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showParent}'s ID is: {this.state.parent_id}</p>\n              :\n              <p style={{ color: \"limegreen\" }}>Leave empty if no parent company</p>\n            }\n          </div>\n          <br />\n          <input\n            className=\"btn btn-success\"\n            type=\"submit\"\n            value=\"Create Company\" />\n        </form>\n\n      </div>\n    )\n  }\n\n}\n\nexport default CreateCompany;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/index.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCar.js",[],{"ruleId":"56","severity":1,"message":"57","line":39,"column":41,"nodeType":"58","endLine":39,"endColumn":90},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":11,"column":25,"nodeType":"58","endLine":11,"endColumn":95},{"ruleId":"63","severity":1,"message":"64","line":14,"column":33,"nodeType":"58","endLine":14,"endColumn":168},{"ruleId":"63","severity":1,"message":"64","line":18,"column":41,"nodeType":"58","endLine":18,"endColumn":117},{"ruleId":"63","severity":1,"message":"64","line":19,"column":41,"nodeType":"58","endLine":19,"endColumn":113},{"ruleId":"65","severity":1,"message":"66","line":78,"column":48,"nodeType":"67","messageId":"68","endLine":78,"endColumn":57},{"ruleId":"65","severity":1,"message":"69","line":47,"column":27,"nodeType":"67","messageId":"68","endLine":47,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":65,"column":25,"nodeType":"58","endLine":65,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":95,"column":49,"nodeType":"58","endLine":95,"endColumn":94},{"ruleId":"65","severity":1,"message":"70","line":125,"column":80,"nodeType":"67","messageId":"68","endLine":125,"endColumn":90},{"ruleId":"56","severity":1,"message":"57","line":129,"column":45,"nodeType":"58","endLine":129,"endColumn":108},{"ruleId":"65","severity":1,"message":"71","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":12},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'parent_id' is assigned a value but never used.","Identifier","unusedVar","'companyID' is assigned a value but never used.","'company_id' is assigned a value but never used.","'Main' is defined but never used.","no-global-assign","no-unsafe-negation"]