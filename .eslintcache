[{"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js":"1","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js":"2","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js":"3","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js":"4","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js":"5"},{"size":2175,"mtime":1612042407403,"results":"6","hashOfConfig":"7"},{"size":3486,"mtime":1612046657582,"results":"8","hashOfConfig":"7"},{"size":2097,"mtime":1612045012450,"results":"9","hashOfConfig":"7"},{"size":4468,"mtime":1612045828326,"results":"10","hashOfConfig":"7"},{"size":1849,"mtime":1612046656676,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xikucl",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js",["23","24","25","26","27"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js",["28"],"import React from 'react';\nimport axios from 'axios';\nimport Main from './Main'\n\nclass CreateCompany extends React.Component {\n\n  state = {\n    name: '',\n    description: \"\",\n    country: '',\n    image: \"\",\n    parent_id: 0,\n    showParent: \"\"\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showParent\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showParent.toLowerCase()) {\n            this.setState({\n              parent_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showParent.toLowerCase())) {\n          this.setState({\n            parent_id: 0\n          })\n        }\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let tempState = { ...this.state };\n    delete tempState.showParent;\n    axios.post(\"https://vroomies.herokuapp.com/companies\", tempState).then(response => {\n      this.setState({\n        name: \"\",\n        description: \"\",\n        image: \"\",\n        country: \"\",\n        parent_id: 0,\n        showParent: \"\"\n      })\n    })\n    this.props.gotoPage(\"main\");\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"main\")}>Back</button>\n        <h3>Create a Company</h3>\n\n        <form onSubmit={this.handleSubmit}>\n          {/* NAME  */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"name\">Company Name</label>\n              <input\n                className=\"form-control\"\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name} />\n            </div>\n          </div>\n          <br />\n          {/* DESCRIPTION */}\n          <div className=\"row\">\n            <div className=\"col-sm-10\">\n              <label className=\"form-label\" htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"description\"\n                onChange={this.handleChange}\n                value={this.state.description}>\n              </textarea>\n            </div>\n          </div>\n          <br />\n          {/* IMAGE */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                value={this.state.image} />\n            </div>\n          </div>\n          <br />\n          {/* COUNTRY */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"country\">Original country</label>\n              <input\n                className=\"form-control\"\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"country\"\n                onChange={this.handleChange}\n                value={this.state.country} />\n            </div>\n          </div>\n          <br />\n          {/* PARENT_ID */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showParent\">Parent Company</label>\n              <input\n                className=\"form-control\"\n                autocomplete=\"off\"\n                type=\"text\"\n                id=\"showParent\"\n                onChange={this.handleChange}\n                value={this.state.showParent} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.parent_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showParent}'s ID is: {this.state.parent_id}</p>\n              :\n              null\n            }\n          </div>\n          <br />\n          <input\n            className=\"btn btn-success\"\n            type=\"submit\"\n            value=\"Create Company\" />\n        </form>\n\n      </div>\n    )\n  }\n\n}\n\nexport default CreateCompany;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js",["29"],{"ruleId":"30","severity":1,"message":"31","line":48,"column":27,"nodeType":"32","messageId":"33","endLine":48,"endColumn":36},{"ruleId":"34","severity":1,"message":"35","line":58,"column":17,"nodeType":"36","endLine":58,"endColumn":59},{"ruleId":"30","severity":1,"message":"37","line":74,"column":57,"nodeType":"32","messageId":"33","endLine":74,"endColumn":67},{"ruleId":"30","severity":1,"message":"38","line":88,"column":61,"nodeType":"32","messageId":"33","endLine":88,"endColumn":66},{"ruleId":"30","severity":1,"message":"39","line":88,"column":68,"nodeType":"32","messageId":"33","endLine":88,"endColumn":78},{"ruleId":"30","severity":1,"message":"40","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":12},{"ruleId":"34","severity":1,"message":"35","line":42,"column":41,"nodeType":"36","endLine":42,"endColumn":90},"no-unused-vars","'companyID' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'childImage' is assigned a value but never used.","'image' is assigned a value but never used.","'company_id' is assigned a value but never used.","'Main' is defined but never used."]