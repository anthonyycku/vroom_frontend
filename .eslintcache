[{"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js":"1","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js":"2","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js":"3","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCompany.js":"4","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js":"5","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js":"6","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js":"7","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/index.js":"8","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCar.js":"9"},{"size":1574,"mtime":1612064191780,"results":"10","hashOfConfig":"11"},{"size":5141,"mtime":1612121536147,"results":"12","hashOfConfig":"11"},{"size":1364,"mtime":1612065253777,"results":"13","hashOfConfig":"11"},{"size":5120,"mtime":1612107883041,"results":"14","hashOfConfig":"11"},{"size":6190,"mtime":1612118789301,"results":"15","hashOfConfig":"11"},{"size":4559,"mtime":1612069460644,"results":"16","hashOfConfig":"11"},{"size":2729,"mtime":1612117297606,"results":"17","hashOfConfig":"11"},{"size":272,"mtime":1611976727766,"results":"18","hashOfConfig":"11"},{"size":5647,"mtime":1612118413328,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"xikucl",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js",["46"],"import React from 'react';\nimport './styles/styles.css'\nimport axios from 'axios'\nimport Nav from './Nav';\n\nclass Companies extends React.Component {\n    state = {\n        companies: []\n    }\n\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.getCompanies();\n        }, 250)\n    }\n    //GET COMPANIES\n    getCompanies = () => {\n        axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n            this.setState({\n                companies: response.data\n            })\n        })\n    }\n    render() {\n        const { gotoPage } = this.props;\n        const { companies } = this.state;\n\n        return (\n            <div>\n\n                <Nav gotoPage={gotoPage} />\n                <div className=\"container marketing companies\">\n                    <div className=\"row\">\n                        {companies.map((result) => {\n                            return (\n\n                                <div className=\"col-lg-4\" key={result.id}>\n                                    <div className=\"profile\" onClick={() => gotoPage(\"company\", result.id)}>\n                                        <img className=\"profileImage\" src={result.image}></img>\n                                        <h2 >{result.name}</h2>\n                                        <p>{result.country}</p>\n                                    </div>\n                                </div>\n\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Companies;",["47","48"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCar.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js",["49","50","51","52"],"import React from 'react';\nimport './styles/styles.css'\n\nclass Nav extends React.Component {\n    render() {\n        const { gotoPage } = this.props;\n        return (\n            <div className=\"navigation\">\n                <nav class=\"navbar navbar-expand-lg fixed-top\">\n                    <div class=\"container-fluid\">\n                        <a href=\"#\" onClick={() => gotoPage(\"main\")} className=\"navbar-brand\">VROOM</a>\n                        <ul class=\"navbar-nav\">\n                            <li class=\"nav-item dropdown\">\n                                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    Create\n                                 </a>\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                    <li><a class=\"dropdown-item\" href=\"#\" onClick={() => gotoPage(\"createCompany\")}>Create Company</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"#\" onClick={() => gotoPage(\"createCar\")}>Create Car</a></li>\n                                </ul>\n                            </li>\n                        </ul>\n\n                    </div>\n                </nav>\n            </div>\n\n        )\n    }\n}\n\nexport default Nav;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCompany.js",["53"],"import React from 'react';\nimport axios from 'axios';\n\nclass EditCompany extends React.Component {\n\n  state = {\n    name: \"\",\n    description: \"\",\n    country: \"\",\n    image: \"\",\n    parent_id: 0,\n    showParent: \"\"\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.getCompany();\n    }, 250)\n    setTimeout(() => {\n      this.getParent();\n    }, 400)\n  }\n  //GET SPECIFIC COMPANY\n  getCompany = () => {\n    axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.props.companyID).then(response => {\n      let data = response.data;\n      this.setState({\n        name: data.name,\n        description: data.description,\n        country: data.country,\n        image: data.image,\n        parent_id: data.parent_id\n      })\n    })\n  }\n  getParent = () => {\n    axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.state.parent_id).then(response => {\n      this.setState({\n        showParent: response.data.name\n      })\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showParent\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showParent.toLowerCase()) {\n            this.setState({\n              parent_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showParent.toLowerCase())) {\n          this.setState({\n            parent_id: 0\n          })\n        }\n      })\n    }\n\n  }\n\n  updateCompany = (event) => {\n    event.preventDefault()\n    axios.put('https://vroomies.herokuapp.com/companies/' + this.props.companyID, this.state).then((response) => {\n    })\n    this.props.gotoPage(\"company\", this.props.companyID);\n  }\n\n\n\n\n  render() {\n    const { name, description, country, image, parent_id, showParent } = this.state\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"company\", this.props.companyID)}>Back</button>\n        <h3>Edit this company</h3>\n        <form id=\"createForm\" onSubmit={this.updateCompany}>\n          {/* Name */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label htmlFor=\"name\" className=\"form-label\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                autoComplete=\"off\"\n                className=\"form-control\"\n                onChange={this.handleChange}\n                defaultValue={name}\n              />\n            </div>\n          </div>\n          <br />\n          {/* Description */}\n          <div className=\"row\">\n            <div className=\"col-sm-10\">\n              <label className=\"form-label\" htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"description\"\n                onChange={this.handleChange}\n                defaultValue={description}>\n              </textarea>\n            </div>\n          </div>\n          <br />\n          {/* Image */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                defaultValue={image} />\n            </div>\n          </div>\n          <br />\n          {/* Country */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"country\">Original country</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"country\"\n                onChange={this.handleChange}\n                defaultValue={country} />\n            </div>\n          </div>\n          <br />\n          {/* Parent_ID */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showParent\">Parent Company</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"showParent\"\n                onKeyUp={this.handleChange}\n                defaultValue={showParent} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.parent_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showParent}'s ID is: {this.state.parent_id}</p>\n              :\n              <p style={{ color: \"limegreen\" }}>Leave empty if no parent company</p>\n            }\n          </div>\n          <br />\n          <input type=\"submit\" value=\"Edit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n\n    )\n  }\n}\nexport default EditCompany;",["54","55"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js",["56","57","58","59","60"],"import React from 'react';\nimport './styles/styles.css'\nimport axios from 'axios';\nimport Nav from './Nav'\nclass Company extends React.Component {\n    state = {\n        company: {},\n        children: [],\n        cars: []\n    }\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.getCompany()\n            this.getCars();\n        }, 500)\n    }\n    getCars = () => {\n        axios.get(\"https://vroomies.herokuapp.com/cars/\" + this.props.companyID).then(response => {\n            this.setState({\n                cars: response.data\n            })\n        })\n    }\n    //GET SPECIFIC COMPANY\n    getCompany = () => {\n        axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.props.companyID).then(response => {\n            let data = response.data;\n            let childrenArray = [];\n            let parentObject = {};\n            for (let key in data) {\n                if (typeof data[key] !== \"object\") {\n                    parentObject[key] = data[key];\n                }\n            }\n            if (data.children) {\n                childrenArray = data.children;\n            }\n            this.setState({\n                company: parentObject,\n                children: childrenArray\n            })\n        })\n    }\n\n    render() {\n        const { name, country, id, image, description } = this.state.company;\n        const { gotoPage, companyID } = this.props;\n        const { cars, children } = this.state\n\n        return (\n            <div className=\"container-sm companyPage\">\n                <Nav gotoPage={gotoPage} />\n                {/* BUTTONS */}\n                <div className=\"row\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div className=\"col-sm-3\">\n                        <button className=\"btn btn-outline-warning\" onClick={() => gotoPage(\"main\")}>Back</button>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <button className=\"btn myButtonEdit\" onClick={() => gotoPage(\"editCompany\", id)}>Edit this company</button>\n                    </div>\n                </div>\n                {/* COMPANY INFO */}\n                <div className=\"row mainLogo\">\n                    <div className=\"col-sm-5\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <img src={image}></img>\n                    </div>\n                    <div className=\"col-sm-7\">\n                        <div className=\"col-sm-10\">\n                            <p className=\"companyName\">{name}</p>\n                        </div>\n                        <div className=\"col-sm-10\">\n                            <p className=\"companyCountry\">{country}</p>\n                        </div>\n                        <div className=\"col-sm-12\">\n                            <p className=\"companyDescription\">{description}</p>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                {/* CHILDREN  */}\n                {children.length > 0 ?\n                    (\n                        <div className=\"children\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <h4>Children Companies</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                {children.map(entry => {\n                                    const { childName, childID, childImage } = entry\n                                    return (\n                                        <div className=\"col-sm-3\" >\n                                            <div className=\"childProfile\" onClick={() => gotoPage(\"company\", childID)}>\n                                                <img className=\"childImage\" src={childImage}></img>\n                                                {childName}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                                }\n                            </div>\n                        </div>\n                    )\n                    :\n                    null\n                }\n                <hr />\n                {/* TABLE OF CARS */}\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\">Model</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Rating</th>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {cars.map(car => {\n                                const { id, model, price, rating, type, image, company_id } = car\n                                return (\n                                    <tr>\n                                        <td>\n                                            <img src={image} style={{ width: \"100px\", height: \"100px\" }} />\n                                        </td>\n                                        <td>{model}</td>\n                                        <td>${price}</td>\n                                        <td>{rating}</td>\n                                        <td>{type}</td>\n                                        <td>\n                                            <button id={id} onClick={() => this.props.gotoPage(\"editCar\", id)} className=\"btn btn-warning\">Edit</button>\n                                            <button className=\"btn btn-danger\">X</button>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Company;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/CreateCompany.js",["61"],"import React from 'react';\nimport axios from 'axios';\nimport Main from './Main'\n\nclass CreateCompany extends React.Component {\n\n  state = {\n    name: '',\n    description: \"\",\n    country: '',\n    image: \"\",\n    parent_id: 0,\n    showParent: \"\"\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showParent\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showParent.toLowerCase()) {\n            this.setState({\n              parent_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showParent.toLowerCase())) {\n          this.setState({\n            parent_id: 0\n          })\n        }\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let tempState = { ...this.state };\n    delete tempState.showParent;\n    axios.post(\"https://vroomies.herokuapp.com/companies\", tempState).then(response => {\n      this.setState({\n        name: \"\",\n        description: \"\",\n        image: \"\",\n        country: \"\",\n        parent_id: 0,\n        showParent: \"\"\n      })\n    })\n    this.props.gotoPage(\"main\");\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"main\")}>Back</button>\n        <h3>Create a Company</h3>\n\n        <form onSubmit={this.handleSubmit}>\n          {/* NAME  */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"name\">Company Name</label>\n              <input\n                required\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name} />\n            </div>\n          </div>\n          <br />\n          {/* DESCRIPTION */}\n          <div className=\"row\">\n            <div className=\"col-sm-10\">\n              <label className=\"form-label\" htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"description\"\n                onChange={this.handleChange}\n                value={this.state.description}>\n              </textarea>\n            </div>\n          </div>\n          <br />\n          {/* IMAGE */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                value={this.state.image} />\n            </div>\n          </div>\n          <br />\n          {/* COUNTRY */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"country\">Original country</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"country\"\n                onChange={this.handleChange}\n                value={this.state.country} />\n            </div>\n          </div>\n          <br />\n          {/* PARENT_ID */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showParent\">Parent Company</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"showParent\"\n                onChange={this.handleChange}\n                value={this.state.showParent} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.parent_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showParent}'s ID is: {this.state.parent_id}</p>\n              :\n              <p style={{ color: \"limegreen\" }}>Leave empty if no parent company</p>\n            }\n          </div>\n          <br />\n          <input\n            className=\"btn btn-success\"\n            type=\"submit\"\n            value=\"Create Company\" />\n        </form>\n\n      </div>\n    )\n  }\n\n}\n\nexport default CreateCompany;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Main.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/index.js",[],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/EditCar.js",["62"],"import React from 'react';\nimport axios from 'axios';\nclass EditCar extends React.Component {\n  state = {\n    model: \"\",\n    price: \"\",\n    rating: \"\",\n    type: \"\",\n    image: \"\",\n    company_id: 0,\n    showCompany: \"\"\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.getCar(this.props.carID);\n    }, 250)\n    setTimeout(() => {\n      this.getParent(this.state.company_id);\n    }, 400)\n  }\n  getCar = (id) => {\n    axios.get(\"https://vroomies.herokuapp.com/singleCar/\" + id).then(response => {\n      let data = response.data\n      this.setState({\n        model: data.model,\n        price: data.price,\n        rating: data.rating,\n        type: data.type,\n        image: data.image,\n        company_id: data.company_id,\n      })\n    })\n  }\n  getParent = (id) => {\n    axios.get(\"https://vroomies.herokuapp.com/companies/\" + id).then(response => {\n      this.setState({\n        showCompany: response.data.name\n      })\n    })\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n\n    if (event.target.id === \"showCompany\") {\n      axios.get(\"https://vroomies.herokuapp.com/companies\").then(response => {\n        response.data.forEach(entry => {\n          if (entry.name.toLowerCase() === this.state.showCompany.toLowerCase()) {\n            this.setState({\n              company_id: entry.id\n            })\n          }\n        })\n        if (response.data.every(entry => entry.name.toLowerCase() !== this.state.showCompany.toLowerCase())) {\n          this.setState({\n            company_id: 0\n          })\n        }\n      })\n    }\n  }\n\n  updateCar = (event) => {\n    event.preventDefault()\n    event.target.reset()\n    const id = event.target.id\n    axios.put('https://vroomies.herokuapp.com/cars/' + id, this.state).then((response) => {\n    })\n    this.props.gotoPage(\"company\", this.state.company_id);\n  }\n\n  render() {\n    const { model, price, rating, type, image, company_id, showCompany } = this.state\n    return (\n      <div className=\"container-sm createPage\">\n        <button className=\"btn btn-warning\" onClick={() => this.props.gotoPage(\"company\", this.state.companyID)}>Back</button>\n        <h3>Edit this car</h3>\n        <form id={this.props.carID} onSubmit={this.updateCar}>\n          {/* MODEL */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label htmlFor=\"model\" className=\"form-label\">Model</label>\n              <input\n                required\n                type=\"text\"\n                id=\"model\"\n                autoComplete=\"off\"\n                className=\"form-control\"\n                onChange={this.handleChange}\n                defaultValue={model}\n              />\n            </div>\n          </div>\n          <br />\n          {/* PRICE */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"price\">Price</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"number\"\n                id=\"price\"\n                onChange={this.handleChange}\n                defaultValue={price}>\n              </input>\n            </div>\n          </div>\n          <br />\n          {/* RATING*/}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"rating\">Rating</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                id=\"rating\"\n                onChange={this.handleChange}\n                defaultValue={rating} />\n            </div>\n          </div>\n          <br />\n          {/* Type */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"type\">Type</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"type\"\n                onChange={this.handleChange}\n                defaultValue={type} />\n            </div>\n          </div>\n          <br />\n          {/* Image */}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"image\">Image</label>\n              <input\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"image\"\n                onChange={this.handleChange}\n                defaultValue={image} />\n            </div>\n          </div>\n          <br />\n          {/* Company_id*/}\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <label className=\"form-label\" htmlFor=\"showCompany\">Company Brand</label>\n              <input\n                required\n                className=\"form-control\"\n                autoComplete=\"off\"\n                type=\"text\"\n                id=\"showCompany\"\n                onKeyUp={this.handleChange}\n                defaultValue={showCompany} />\n            </div>\n          </div>\n          {/* PARENT ID ALGORITHM */}\n          <div>\n            {this.state.company_id !== 0 ?\n              <p style={{ color: \"limegreen\" }}>{this.state.showCompany}'s ID is: {this.state.company_id}</p>\n              :\n              <p style={{ color: \"limegreen\" }}>Please enter brand name!</p>\n            }\n          </div>\n          <br />\n          <input type=\"submit\" value=\"Edit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default EditCar;",{"ruleId":"63","severity":1,"message":"64","line":39,"column":41,"nodeType":"65","endLine":39,"endColumn":90},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":25,"nodeType":"65","endLine":11,"endColumn":95},{"ruleId":"70","severity":1,"message":"71","line":14,"column":33,"nodeType":"65","endLine":14,"endColumn":168},{"ruleId":"70","severity":1,"message":"71","line":18,"column":41,"nodeType":"65","endLine":18,"endColumn":117},{"ruleId":"70","severity":1,"message":"71","line":19,"column":41,"nodeType":"65","endLine":19,"endColumn":113},{"ruleId":"72","severity":1,"message":"73","line":78,"column":48,"nodeType":"74","messageId":"75","endLine":78,"endColumn":57},{"ruleId":"66","replacedBy":"76"},{"ruleId":"68","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":47,"column":27,"nodeType":"74","messageId":"75","endLine":47,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":65,"column":25,"nodeType":"65","endLine":65,"endColumn":42},{"ruleId":"63","severity":1,"message":"64","line":95,"column":49,"nodeType":"65","endLine":95,"endColumn":94},{"ruleId":"72","severity":1,"message":"79","line":125,"column":80,"nodeType":"74","messageId":"75","endLine":125,"endColumn":90},{"ruleId":"63","severity":1,"message":"64","line":129,"column":45,"nodeType":"65","endLine":129,"endColumn":108},{"ruleId":"72","severity":1,"message":"80","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":12},{"ruleId":"72","severity":1,"message":"79","line":75,"column":48,"nodeType":"74","messageId":"75","endLine":75,"endColumn":58},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'parent_id' is assigned a value but never used.","Identifier","unusedVar",["81"],["82"],"'companyID' is assigned a value but never used.","'company_id' is assigned a value but never used.","'Main' is defined but never used.","no-global-assign","no-unsafe-negation"]