[{"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js":"1","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js":"2","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js":"3"},{"size":8215,"mtime":1612212289481,"results":"4","hashOfConfig":"5"},{"size":1470,"mtime":1612235016698,"results":"6","hashOfConfig":"5"},{"size":1789,"mtime":1612159502970,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"xikucl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Company.js",["15","16","17","18","19"],"import React from 'react';\nimport './styles/styles.css'\nimport axios from 'axios';\nimport Nav from './Nav'\nclass Company extends React.Component {\n    state = {\n        company: {},\n        children: [],\n        cars: [],\n        filter: {\n            id: this.props.companyID,\n            type: \"all\"\n        }\n    }\n    componentDidMount = () => {\n        this.getCompany();\n        this.getCars(this.state.filter.type);\n    }\n\n    //TYPE TOGGLE METHOD\n    typeToggle = (event) => {\n        let selectBox = document.getElementById(\"selectType\");\n        let selectedItem = selectBox.options[selectBox.selectedIndex].value;\n        this.setState({\n            filter: {\n                id: this.state.filter.id,\n                type: selectedItem\n            }\n        })\n        setTimeout(() => {\n            this.getCars(this.state.filter.type);\n        }, 100)\n    }\n\n    // GET ALL CARS FOR THIS COMPANY\n    getCars = (type) => {\n        if (type === \"all\") {\n            axios.get(\"https://vroomies.herokuapp.com/cars/\" + this.props.companyID).then(response => {\n                this.setState({\n                    cars: response.data,\n                })\n            })\n        } else {\n            const { id, type } = this.state.filter;\n            axios.get(\"https://vroomies.herokuapp.com/filter/type/\" + id + \"/\" + type)\n                .then(response => {\n                    this.setState({\n                        cars: response.data\n                    })\n                })\n        }\n    }\n    //GET SPECIFIC COMPANY\n    getCompany = () => {\n        axios.get(\"https://vroomies.herokuapp.com/companies/\" + this.props.companyID).then(response => {\n            let data = response.data;\n            let childrenArray = [];\n            let parentObject = {};\n            for (let key in data) {\n                if (typeof data[key] !== \"object\") {\n                    parentObject[key] = data[key];\n                }\n            }\n            if (data.children) {\n                childrenArray = data.children;\n            }\n            this.setState({\n                company: parentObject,\n                children: childrenArray\n            })\n        })\n    }\n\n    render() {\n        const { name, country, id, image, description } = this.state.company;\n        const { gotoPage, companyID } = this.props;\n        const { cars, children } = this.state\n\n        return (\n            <div className=\"container-sm companyPage\">\n                <Nav gotoPage={gotoPage} />\n                {/* BUTTONS */}\n                <div className=\"row\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div className=\"col-sm-3\">\n                        <button className=\"btn btn-outline-warning\" onClick={() => gotoPage(\"main\")}>Back</button>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <button className=\"btn myButtonEdit\" onClick={() => gotoPage(\"editCompany\", id)}>Edit this company</button>\n                    </div>\n                </div>\n                {/* COMPANY INFO */}\n                <div className=\"row mainLogo\">\n                    <div className=\"col-sm-5\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <img src={image}></img>\n                    </div>\n                    <div className=\"col-sm-7\">\n                        <div className=\"col-sm-10\">\n                            <p className=\"companyName\">{name}</p>\n                        </div>\n                        <div className=\"col-sm-10\">\n                            <p className=\"companyCountry\">{country}</p>\n                        </div>\n                        <div className=\"col-sm-12\">\n                            <p className=\"companyDescription\">{description}</p>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                {/* CHILDREN  */}\n                {children.length > 0 ?\n                    (\n                        <div className=\"children\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <h4>Children Companies</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                {children.map(entry => {\n                                    const { childName, childID, childImage } = entry\n                                    return (\n                                        <div className=\"col-sm-3\" >\n                                            <div className=\"childProfile\" onClick={() => gotoPage(\"company\", childID)}>\n                                                <img className=\"childImage\" src={childImage}></img>\n                                                {childName}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                                }\n                            </div>\n                        </div>\n                    )\n                    :\n                    <h4 style={{ color: \"yellow\" }}>This company has no children yet!</h4>\n                }\n                <hr />\n                {/* TABLE OF CARS */}\n                <div className=\"tableDiv\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th className=\"theader\" scope=\"col\">Model</th>\n                                <th className=\"theader\" scope=\"col\">Price</th>\n                                <th className=\"theader\" scope=\"col\">Rating</th>\n                                <th scope=\"col\">\n                                    {/* SELECT FORM */}\n                                    <select id=\"selectType\" className=\"form-select\" onChange={() => this.typeToggle()}>\n                                        <optgroup>\n                                            <option value={this.state.filter.type}>Type</option>\n                                        </optgroup>\n                                        <optgroup label=\"-------------\">\n                                            <option value=\"all\">All</option>\n                                            <option value=\"sedan\">Sedan</option>\n                                            <option value=\"SUV\">SUV</option>\n                                            <option value=\"coupe\">Coupe</option>\n                                        </optgroup>\n                                    </select>\n                                    {/* END OF SELECT FORM */}\n                                </th>\n                                <th scope=\"col\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {cars.map(car => {\n                                const { id, model, price, rating, type, image, company_id } = car\n                                return (\n                                    <tr>\n                                        <td>\n                                            <img src={image} style={{ width: \"100px\", height: \"100px\" }} />\n                                        </td>\n                                        <td>{model}</td>\n                                        <td>${price}</td>\n                                        <td>{rating}</td>\n                                        <td>{type}</td>\n                                        <td>\n                                            <button id={id} onClick={() => this.props.gotoPage(\"editCar\", id)} className=\"btn btn-warning\">Edit</button>\n                                            <button className=\"btn btn-danger\">X</button>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Company;","/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Nav.js",["20","21","22","23","24"],"/Users/anthonyku/Desktop/Project4/vroom_frontend/src/Companies.js",["25"],{"ruleId":"26","severity":1,"message":"27","line":76,"column":27,"nodeType":"28","messageId":"29","endLine":76,"endColumn":36},{"ruleId":"30","severity":1,"message":"31","line":94,"column":25,"nodeType":"32","endLine":94,"endColumn":42},{"ruleId":"30","severity":1,"message":"31","line":124,"column":49,"nodeType":"32","endLine":124,"endColumn":94},{"ruleId":"26","severity":1,"message":"33","line":168,"column":80,"nodeType":"28","messageId":"29","endLine":168,"endColumn":90},{"ruleId":"30","severity":1,"message":"31","line":172,"column":45,"nodeType":"32","endLine":172,"endColumn":108},{"ruleId":"26","severity":1,"message":"34","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":13,"column":25,"nodeType":"32","endLine":13,"endColumn":95},{"ruleId":"35","severity":1,"message":"36","line":16,"column":33,"nodeType":"32","endLine":16,"endColumn":168},{"ruleId":"35","severity":1,"message":"36","line":20,"column":41,"nodeType":"32","endLine":20,"endColumn":117},{"ruleId":"35","severity":1,"message":"36","line":21,"column":41,"nodeType":"32","endLine":21,"endColumn":113},{"ruleId":"30","severity":1,"message":"31","line":42,"column":45,"nodeType":"32","endLine":42,"endColumn":94},"no-unused-vars","'companyID' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'company_id' is assigned a value but never used.","'logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]